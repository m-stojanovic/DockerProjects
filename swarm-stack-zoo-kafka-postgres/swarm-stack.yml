version: '3.7'

services:
  nginx:
    image: nginx:1.17
    ports:
      - '80:80'
    networks:
      - front-tier

  zoo1:
    image: zookeeper:3.4
    ports:
      - '2181:2181'
    environment:
      - 'zk_id:1'
    networks:
      - back-tier
    volumes:
      - './zoo1:/data'
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zoo1
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zoo1:2181
      - KAFKA_ADVERTISED_HOST_NAME=192.168.0.11
    networks:
      - back-tier
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'

  pg-master:
    image: postgres:12
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRESS_PASSWORD=123456
      - POSTGRES_DB=pg_db
    networks:
      - back-tier
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    volumes:
      - './postgresql_data:/var/lib/postgresql/data'

networks:
  front-tier:
  back-tier:

volumes:
  zoo1:
  postgresql_data:
